# https://docs.camunda.io/docs/apis-tools/spring-zeebe-sdk/getting-started/
# https://docs.camunda.io/docs/apis-tools/spring-zeebe-sdk/configuration/

camunda:
  client:
    mode: selfmanaged
    zeebe:
      enabled: true
      grpc-address: http://localhost:26500
      preferRestOverGrpc: false
      execution-threads: 100
      defaults:
        max-jobs-active: 100


waitforresult:
  resultworker:
    implementation: HOST
    modeLinear: false

  creator:
    enabled: true
    # WaitForResultLoadTest
    processId: BPO_Camunda_Benchmark_JobWorkerUT
    numberOfLoops: 6000
    numberOfThreads: 1
    topicPrefix: end-creation-
    timeoutCreationInMs: 5000

  message:
    # Enable the message only if you enabled the creator: source of data is produce by the creator
    enabled: true
    names: Activity_First_User_Task, Activity_Last_User_Task
    topicPrefix: end-msg-
    # use JOBKEY or PROCESSINSTANCEKEY
    # Attention, using PROCESSINSTANCEKEY means this process variable exist and is populated by an activity like "initialiseServiceTask"
    keyCorrelation: PROCESSINSTANCEKEY
    timeoutMessageLiveInMs: 100000


  worker:
    enabled: true



logging:
  level:
    root: INFO